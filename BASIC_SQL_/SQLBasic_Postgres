Download POSTGRESQL
https://www.enterprisedb.com/downloads/postgres-postgresql-downloads
RolitoIA / 5432 Port

download PGADMIN
https://www.postgresql.org/ftp/pgadmin/pgadmin4/v4.25/windows/
RolitoIA

Install PostgreSQL
Install PgAdmin

Open PgAdmin -> Create DBase + Create Schema --> Executes SQLs

https://www.tutorialspoint.com/postgresql/postgresql_overview.htm

=====================

CREATE DBASE

-- Database: DemocracyCH

-- DROP DATABASE "DemocracyCH";

CREATE DATABASE "DemocracyCH"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'English_United States.1252'
    LC_CTYPE = 'English_United States.1252'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;

=======================

Ligne de commands pgAdmin:  createdb -h localhost -p 5432 -U postgres testdbname

=======================

--CREATE TABLES - Sur schema-public.

CREATE TABLE DEPARTMENT(
   ID INT PRIMARY KEY      NOT NULL,
   DEPT           CHAR(50) NOT NULL,
   EMP_ID         INT      NOT NULL
);

CREATE TABLE COMPANY(
   ID INT PRIMARY KEY     NOT NULL,
   NAME           TEXT    NOT NULL,
   AGE            INT     NOT NULL,
   ADDRESS        CHAR(50),
   SALARY         REAL
);

==========================

--DROP TABLE Erase Table

========================


--CREATE SCHEMA name Schema est una cleccion de tablas

=====================

INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY)
VALUES (1, 'Ramesh', 32, 'Ahmedabad', 2000.00 );

======================

 SELECT * FROM CUSTOMERS
 SELECT TOP 3 * FROM CUSTOMERS;
 SELECT * FROM CUSTOMERS LIMIT 3; --Equivalent
 SELECT ID, NAME, SALARY FROM CUSTOMERS;
 SELECT ID, NAME, SALARY FROM CUSTOMERS WHERE SALARY > 2000;
 SELECT ID, NAME, SALARY FROM CUSTOMERS WHERE NAME = 'Hardik';
 SELECT ID, NAME, SALARY FROM CUSTOMERS WHERE SALARY > 2000 AND age < 25;
 SELECT * FROM CUSTOMERS WHERE SALARY LIKE '200%';                          --records from the CUSTOMERS table, where the SALARY starts with 200.

 SELECT * FROM CUSTOMERS ORDER BY NAME, SALARY;
 SELECT * FROM CUSTOMERS ORDER BY NAME DESC;                                --Descendant
 SELECT SALARY FROM CUSTOMERS ORDER BY SALARY;                              --Lista de salarion ordenada

 UPDATE CUSTOMERS SET ADDRESS = 'Pune' WHERE ID = 6;                        --id 6 de tabla customers
 UPDATE CUSTOMERS SET ADDRESS = 'Pune', SALARY = 1000.00;                   --Update all customers with same address salary given

 DELETE FROM CUSTOMERS WHERE ID = 6;
 DELETE FROM CUSTOMERS;                                                     --All records

 SELECT NAME, SUM(SALARY) FROM CUSTOMERS GROUP BY NAME;                     --Show list names with salaries acuumuled

 SELECT DISTINCT SALARY FROM CUSTOMERS ORDER BY SALARY;                     --DISTINCT es mostrar solo los distintos en el cambio

 ======================

   SELECT * FROM CUSTOMERS
   ORDER BY (CASE ADDRESS
   WHEN 'DELHI' 	 THEN 1
   WHEN 'BHOPAL' 	 THEN 2
   WHEN 'KOTA' 	 THEN 3
   WHEN 'AHMEDABAD' THEN 4
   WHEN 'MP' 	THEN 5
   ELSE 100 END) ASC, ADDRESS DESC;

 ===========================
