https://www.slim.ai/blog/creating-a-container-pipeline-with-gitlab-ci.html
https://blog.logrocket.com/build-deploy-flask-app-using-docker/
https://www.docker.com/blog/deploy-gpu-accelerated-applications-on-amazon-ecs-with-docker-compose/

https://towardsdatascience.com/hands-on-image-compression-using-principal-component-analysis-with-python-1cd6cad72366




NOTES

https://www.youtube.com/watch?v=MAsp90tQGOA - Deploy Flask application on AWS EC2 instance

1) Create instance EC2
	creation de .pem key de securite:	keyIAApplication.pem
	Instance ID:  i-0742e369de6ea505a (IAFlask)
	52.201.253.130
	ec2-52-201-253-130.compute-1.amazonaws.com

	Inbound rules dans le security group:  sg-0e4914eb92fecdf2b - launch-wizard-1
	ssh TCP 22
	HTTP 80
	HTTPS 443

2) Connect to instance EC2
Instance ID : i-0742e369de6ea505a (IAFlask)
Open an SSH client.
	Locate your private key file. The key used to launch this instance is keyIAApplication.pem
	Run this command, if necessary, to ensure your key is not publicly viewable.
	chmod 400 keyIAApplication.pem
	Connect to your instance using its Public DNS:
	ec2-52-201-253-130.compute-1.amazonaws.com
	Example:
	ssh -i "keyIAApplication.pem" ec2-user@ec2-52-201-253-130.compute-1.amazonaws.com
	
	TO SHOW:
    	https://aws.amazon.com/amazon-linux-2/
		2 package(s) needed for security, out of 5 available
		Run "sudo yum update" to apply all updates.
		[ec2-user@ip-172-31-29-53 ~]$

3) OPTION A:  Install Applications and run application flask .py using ssh

Deploy Flask application on AWS EC2 instance
https://www.youtube.com/watch?v=MAsp90tQGOA

Connected with ssh to to your instance:
	
	sudo apt-get update
	sudo apt-get install python3
	whereis python
	sudo app-get install python3-pip
	whereis pip3
	sudo pip3 install flask
	sudo apt-get install nginx
	sudo apt-get install gunicorn3
	copy . . #Copy files for application or create application
	python appRx.py 
	
	

4)  Create a virtual environment notes: https://ordinarycoders.com/blog/article/python-virtual-environment
										https://mothergeo-py.readthedocs.io/en/latest/development/how-to/venv.html

	4.1. Creating a Python virtual environment in Windows:  py -m venv env  --> Type py -m venv env to create a virtual environment named env
												  Linux: python3 -m venv env
			
	4.2. Pour activer:  
			Windows:  Scripts\activate dans le folder de environment cree en 4.1
			Linux:  cd to your project directory and run virtualenv to create the new virtual environment.
			The following commands will create a new virtual environment under my-project/my-venv.

				cd my-project
				virtualenv --python python3.6 venv
			
			Activate the Environment
			
				source venv/bin/activate
	
	
	4.3  Pour deactiver: deactivate
	

How to build Docker Images for a Flask App
https://www.youtube.com/watch?v=wrMJoKpK2mk

	Sur le fichier avec le docker file
	
		docker image build -t rx-flask-app .

		docker run -p 5000:5000 -d rx-flask-app

	
	
	
	
	
	
	
	
	
	
	
	
	
	

